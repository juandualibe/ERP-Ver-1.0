<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9+V93AAAAABJRU5ErkJggg==
</value>
  </data>
</root>